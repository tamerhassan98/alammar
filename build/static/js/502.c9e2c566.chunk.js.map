{"version":3,"file":"static/js/502.c9e2c566.chunk.js","mappings":"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","sources":["data/servicesData.js","admin/AdminLogin.js","admin/Messages.js","admin/Admin.js"],"sourcesContent":["import { translations } from '../translations';\r\n\r\nexport const getServicesData = (language) => {\r\n  const t = translations[language];\r\n  \r\n  return [\r\n    {\r\n      id: \"service1\",\r\n      title: t.service1Title || \"Building Maintenance\",\r\n      description: t.service1Desc || \"Comprehensive maintenance services to keep your building in perfect condition, including preventive and corrective maintenance.\",\r\n      imageUrl: \"https://source.unsplash.com/random/100x100/?maintenance\",\r\n      features: [\r\n        \"Preventive maintenance planning\",\r\n        \"Corrective maintenance\",\r\n        \"Equipment servicing and repair\",\r\n        \"Building systems maintenance\",\r\n        \"Emergency response services\"\r\n      ]\r\n    },\r\n    {\r\n      id: \"service2\",\r\n      title: t.service2Title || \"Security Management\",\r\n      description: t.service2Desc || \"Round-the-clock security services to ensure the safety of your premises, assets, and people.\",\r\n      imageUrl: \"https://source.unsplash.com/random/100x100/?security\",\r\n      features: [\r\n        \"Access control systems\",\r\n        \"Surveillance systems\",\r\n        \"Security personnel\",\r\n        \"Security audits and assessments\",\r\n        \"Emergency and evacuation planning\"\r\n      ]\r\n    },\r\n    {\r\n      id: \"service3\",\r\n      title: t.service3Title || \"Cleaning Services\",\r\n      description: t.service3Desc || \"Professional cleaning solutions for all types of facilities, ensuring a clean and healthy environment.\",\r\n      imageUrl: \"https://source.unsplash.com/random/100x100/?cleaning\",\r\n      features: [\r\n        \"Regular janitorial services\",\r\n        \"Deep cleaning\",\r\n        \"Specialized cleaning\",\r\n        \"Waste management\",\r\n        \"Green cleaning practices\"\r\n      ]\r\n    },\r\n    {\r\n      id: \"service4\",\r\n      title: t.service4Title || \"HVAC Systems\",\r\n      description: t.service4Desc || \"Installation, maintenance, and repair of heating, ventilation, and air conditioning systems for optimal comfort.\",\r\n      imageUrl: \"https://source.unsplash.com/random/100x100/?hvac\",\r\n      features: [\r\n        \"System installation\",\r\n        \"Preventive maintenance\",\r\n        \"Repair services\",\r\n        \"Energy efficiency optimization\",\r\n        \"Indoor air quality improvements\"\r\n      ]\r\n    },\r\n    {\r\n      id: \"service5\",\r\n      title: t.service5Title || \"Landscaping\",\r\n      description: t.service5Desc || \"Professional landscaping services to enhance the aesthetic appeal of your property and maintain outdoor areas.\",\r\n      imageUrl: \"https://source.unsplash.com/random/100x100/?landscaping\",\r\n      features: [\r\n        \"Landscape design\",\r\n        \"Lawn maintenance\",\r\n        \"Tree and shrub care\",\r\n        \"Irrigation systems\",\r\n        \"Seasonal plantings\"\r\n      ]\r\n    },\r\n    {\r\n      id: \"service6\",\r\n      title: t.service6Title || \"Energy Management\",\r\n      description: t.service6Desc || \"Smart energy solutions to reduce consumption, lower costs, and promote sustainability.\",\r\n      imageUrl: \"https://source.unsplash.com/random/100x100/?energy\",\r\n      features: [\r\n        \"Energy audits\",\r\n        \"Consumption monitoring\",\r\n        \"Efficiency improvements\",\r\n        \"Renewable energy integration\",\r\n        \"Cost reduction strategies\"\r\n      ]\r\n    }\r\n  ];\r\n};\r\n\r\nexport const servicesData = getServicesData('en'); ","import React, { useState } from 'react';\r\nimport '../styles/AdminLogin.css';\r\n\r\nconst AdminLogin = ({ onLogin }) => {\r\n  const [credentials, setCredentials] = useState({\r\n    username: '',\r\n    password: ''\r\n  });\r\n  const [error, setError] = useState('');\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setCredentials(prevState => ({\r\n      ...prevState,\r\n      [name]: value\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // Simple authentication - in a real app, this would be handled securely on a server\r\n    if (credentials.username === 'admin' && credentials.password === 'admin123') {\r\n      onLogin(true);\r\n      // Store authentication in localStorage to persist between page refreshes\r\n      localStorage.setItem('adminAuthenticated', 'true');\r\n    } else {\r\n      setError('Invalid username or password');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"admin-login-container\">\r\n      <div className=\"admin-login-card\">\r\n        <h2>Admin Login</h2>\r\n        {error && <div className=\"login-error\">{error}</div>}\r\n        <form onSubmit={handleSubmit} className=\"admin-login-form\">\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"username\">Username</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"username\"\r\n              name=\"username\"\r\n              value={credentials.username}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              name=\"password\"\r\n              value={credentials.password}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </div>\r\n          <button type=\"submit\" className=\"btn login-btn\">Login</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminLogin; ","import React, { useState, useEffect } from 'react';\r\nimport '../styles/Messages.css';\r\n\r\nconst Messages = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [selectedMessage, setSelectedMessage] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const savedMessages = localStorage.getItem('contactMessages');\r\n    if (savedMessages) {\r\n      const parsedMessages = JSON.parse(savedMessages);\r\n      // Sort messages by date, newest first\r\n      parsedMessages.sort((a, b) => new Date(b.date) - new Date(a.date));\r\n      setMessages(parsedMessages);\r\n    }\r\n  }, []);\r\n\r\n  const handleDeleteMessage = (index) => {\r\n    if (window.confirm('Are you sure you want to delete this message?')) {\r\n      const updatedMessages = [...messages];\r\n      updatedMessages.splice(index, 1);\r\n      setMessages(updatedMessages);\r\n      localStorage.setItem('contactMessages', JSON.stringify(updatedMessages));\r\n      \r\n      if (selectedMessage === index) {\r\n        setSelectedMessage(null);\r\n      }\r\n    }\r\n  };\r\n\r\n  const formatDate = (dateString) => {\r\n    const options = { \r\n      year: 'numeric', \r\n      month: 'short', \r\n      day: 'numeric',\r\n      hour: '2-digit',\r\n      minute: '2-digit'\r\n    };\r\n    return new Date(dateString).toLocaleDateString(undefined, options);\r\n  };\r\n\r\n  return (\r\n    <div className=\"messages-container\">\r\n      <h2>Contact Messages</h2>\r\n      \r\n      {messages.length === 0 ? (\r\n        <div className=\"no-messages\">\r\n          <p>No messages received yet.</p>\r\n        </div>\r\n      ) : (\r\n        <div className=\"messages-grid\">\r\n          <div className=\"messages-list\">\r\n            {messages.map((message, index) => (\r\n              <div \r\n                key={index} \r\n                className={`message-item ${selectedMessage === index ? 'selected' : ''}`}\r\n                onClick={() => setSelectedMessage(index)}\r\n              >\r\n                <div className=\"message-header\">\r\n                  <h3>{message.name}</h3>\r\n                  <span className=\"message-date\">{formatDate(message.date)}</span>\r\n                </div>\r\n                <p className=\"message-subject\">{message.service}</p>\r\n                <p className=\"message-preview\">{message.message.substring(0, 60)}...</p>\r\n              </div>\r\n            ))}\r\n          </div>\r\n          \r\n          <div className=\"message-details\">\r\n            {selectedMessage !== null ? (\r\n              <div className=\"message-content\">\r\n                <div className=\"message-actions\">\r\n                  <button \r\n                    className=\"btn btn-delete\"\r\n                    onClick={() => handleDeleteMessage(selectedMessage)}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </div>\r\n                \r\n                <div className=\"message-info\">\r\n                  <h3>From: {messages[selectedMessage].name}</h3>\r\n                  <p><strong>Email:</strong> {messages[selectedMessage].email}</p>\r\n                  <p><strong>Phone:</strong> {messages[selectedMessage].phone || 'Not provided'}</p>\r\n                  <p><strong>Company:</strong> {messages[selectedMessage].company || 'Not provided'}</p>\r\n                  <p><strong>Service of Interest:</strong> {messages[selectedMessage].service}</p>\r\n                  <p><strong>Date:</strong> {formatDate(messages[selectedMessage].date)}</p>\r\n                </div>\r\n                \r\n                <div className=\"message-body\">\r\n                  <h4>Message:</h4>\r\n                  <p>{messages[selectedMessage].message}</p>\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <div className=\"select-message\">\r\n                <p>Select a message to view details</p>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Messages; ","import React, { useState, useEffect } from 'react';\r\nimport AdminLogin from './AdminLogin';\r\nimport Messages from './Messages';\r\nimport { servicesData } from '../data/servicesData';\r\nimport '../styles/Admin.css';\r\n\r\nconst Admin = () => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [services, setServices] = useState([]);\r\n  const [editIndex, setEditIndex] = useState(null);\r\n  const [formData, setFormData] = useState({\r\n    title: '',\r\n    description: '',\r\n    imageUrl: '',\r\n    features: ['', '', '', '', '']\r\n  });\r\n  const [isAdding, setIsAdding] = useState(false);\r\n  const [message, setMessage] = useState({ text: '', type: '' });\r\n  const [activeTab, setActiveTab] = useState('services');\r\n\r\n  // Check if user is authenticated on component mount\r\n  useEffect(() => {\r\n    const adminAuth = localStorage.getItem('adminAuthenticated');\r\n    if (adminAuth === 'true') {\r\n      setIsAuthenticated(true);\r\n    }\r\n    \r\n    // Load services from localStorage if they exist\r\n    const savedServices = localStorage.getItem('services');\r\n    if (savedServices) {\r\n      setServices(JSON.parse(savedServices));\r\n    } else {\r\n      setServices([...servicesData]);\r\n      // Initialize localStorage with default services data\r\n      localStorage.setItem('services', JSON.stringify(servicesData));\r\n    }\r\n  }, []);\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem('adminAuthenticated');\r\n    setIsAuthenticated(false);\r\n  };\r\n\r\n  const handleEdit = (index) => {\r\n    setEditIndex(index);\r\n    setFormData({\r\n      title: services[index].title,\r\n      description: services[index].description,\r\n      imageUrl: services[index].imageUrl,\r\n      features: [...services[index].features]\r\n    });\r\n    setIsAdding(false);\r\n  };\r\n\r\n  const handleAdd = () => {\r\n    setIsAdding(true);\r\n    setEditIndex(null);\r\n    setFormData({\r\n      title: '',\r\n      description: '',\r\n      imageUrl: 'https://source.unsplash.com/random/100x100/?service',\r\n      features: ['', '', '', '', '']\r\n    });\r\n  };\r\n\r\n  const handleDelete = (index) => {\r\n    if (window.confirm('Are you sure you want to delete this service?')) {\r\n      const updatedServices = [...services];\r\n      updatedServices.splice(index, 1);\r\n      setServices(updatedServices);\r\n      \r\n      // Update localStorage\r\n      localStorage.setItem('services', JSON.stringify(updatedServices));\r\n      \r\n      showMessage('Service deleted successfully', 'success');\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prevState => ({\r\n      ...prevState,\r\n      [name]: value\r\n    }));\r\n  };\r\n\r\n  const handleFeatureChange = (index, value) => {\r\n    const updatedFeatures = [...formData.features];\r\n    updatedFeatures[index] = value;\r\n    setFormData(prevState => ({\r\n      ...prevState,\r\n      features: updatedFeatures\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    \r\n    // Filter out empty features\r\n    const filteredFeatures = formData.features.filter(feature => feature.trim() !== '');\r\n    \r\n    // Create updated service object\r\n    const updatedService = {\r\n      ...formData,\r\n      features: filteredFeatures\r\n    };\r\n    \r\n    // Update services array\r\n    let updatedServices;\r\n    if (isAdding) {\r\n      updatedServices = [...services, updatedService];\r\n      showMessage('New service added successfully', 'success');\r\n    } else {\r\n      updatedServices = [...services];\r\n      updatedServices[editIndex] = updatedService;\r\n      showMessage('Service updated successfully', 'success');\r\n    }\r\n    \r\n    setServices(updatedServices);\r\n    \r\n    // Update localStorage\r\n    localStorage.setItem('services', JSON.stringify(updatedServices));\r\n    \r\n    // Reset form\r\n    setFormData({\r\n      title: '',\r\n      description: '',\r\n      imageUrl: '',\r\n      features: ['', '', '', '', '']\r\n    });\r\n    setEditIndex(null);\r\n    setIsAdding(false);\r\n  };\r\n\r\n  const showMessage = (text, type) => {\r\n    setMessage({ text, type });\r\n    setTimeout(() => {\r\n      setMessage({ text: '', type: '' });\r\n    }, 3000);\r\n  };\r\n\r\n  const cancelEdit = () => {\r\n    setEditIndex(null);\r\n    setIsAdding(false);\r\n    setFormData({\r\n      title: '',\r\n      description: '',\r\n      imageUrl: '',\r\n      features: ['', '', '', '', '']\r\n    });\r\n  };\r\n\r\n  if (!isAuthenticated) {\r\n    return <AdminLogin onLogin={setIsAuthenticated} />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"admin-page\">\r\n      <section className=\"page-header\">\r\n        <div className=\"container\">\r\n          <h1 className=\"page-title\">Admin Panel</h1>\r\n          <p className=\"page-subtitle\">Manage website content</p>\r\n          <button onClick={handleLogout} className=\"btn btn-logout\">Logout</button>\r\n        </div>\r\n      </section>\r\n\r\n      <section className=\"section admin-content\">\r\n        <div className=\"container\">\r\n          {message.text && (\r\n            <div className={`message ${message.type}`}>\r\n              {message.text}\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"admin-tabs\">\r\n            <button \r\n              className={`tab-btn ${activeTab === 'services' ? 'active' : ''}`}\r\n              onClick={() => setActiveTab('services')}\r\n            >\r\n              Services\r\n            </button>\r\n            <button \r\n              className={`tab-btn ${activeTab === 'messages' ? 'active' : ''}`}\r\n              onClick={() => setActiveTab('messages')}\r\n            >\r\n              Messages\r\n            </button>\r\n          </div>\r\n\r\n          {activeTab === 'services' && (\r\n            <div className=\"tab-content\">\r\n              <div className=\"admin-actions\">\r\n                <button className=\"btn\" onClick={handleAdd}>Add New Service</button>\r\n              </div>\r\n\r\n              {(editIndex !== null || isAdding) && (\r\n                <div className=\"edit-form-container\">\r\n                  <h2>{isAdding ? 'Add New Service' : 'Edit Service'}</h2>\r\n                  <form className=\"edit-form\" onSubmit={handleSubmit}>\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"title\">Service Title</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        id=\"title\"\r\n                        name=\"title\"\r\n                        value={formData.title}\r\n                        onChange={handleInputChange}\r\n                        required\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"description\">Description</label>\r\n                      <textarea\r\n                        id=\"description\"\r\n                        name=\"description\"\r\n                        rows=\"3\"\r\n                        value={formData.description}\r\n                        onChange={handleInputChange}\r\n                        required\r\n                      ></textarea>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"imageUrl\">Image URL</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        id=\"imageUrl\"\r\n                        name=\"imageUrl\"\r\n                        value={formData.imageUrl}\r\n                        onChange={handleInputChange}\r\n                        required\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                      <label>Features (at least one required)</label>\r\n                      {formData.features.map((feature, index) => (\r\n                        <input\r\n                          key={index}\r\n                          type=\"text\"\r\n                          placeholder={`Feature ${index + 1}`}\r\n                          value={feature}\r\n                          onChange={(e) => handleFeatureChange(index, e.target.value)}\r\n                          required={index === 0}\r\n                          className=\"feature-input\"\r\n                        />\r\n                      ))}\r\n                    </div>\r\n\r\n                    <div className=\"form-actions\">\r\n                      <button type=\"submit\" className=\"btn\">\r\n                        {isAdding ? 'Add Service' : 'Update Service'}\r\n                      </button>\r\n                      <button type=\"button\" className=\"btn btn-cancel\" onClick={cancelEdit}>\r\n                        Cancel\r\n                      </button>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              )}\r\n\r\n              <div className=\"services-list\">\r\n                <h2>Current Services</h2>\r\n                <div className=\"admin-grid\">\r\n                  {services.map((service, index) => (\r\n                    <div className=\"admin-card\" key={index}>\r\n                      <div className=\"admin-card-header\">\r\n                        <img src={service.imageUrl} alt={service.title} />\r\n                        <h3>{service.title}</h3>\r\n                      </div>\r\n                      <div className=\"admin-card-body\">\r\n                        <p>{service.description}</p>\r\n                        <ul>\r\n                          {service.features.map((feature, idx) => (\r\n                            <li key={idx}>{feature}</li>\r\n                          ))}\r\n                        </ul>\r\n                      </div>\r\n                      <div className=\"admin-card-actions\">\r\n                        <button className=\"btn btn-edit\" onClick={() => handleEdit(index)}>Edit</button>\r\n                        <button className=\"btn btn-delete\" onClick={() => handleDelete(index)}>Delete</button>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {activeTab === 'messages' && (\r\n            <div className=\"tab-content\">\r\n              <Messages />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Admin; "],"names":["getServicesData","language","t","translations","id","title","service1Title","description","service1Desc","imageUrl","features","service2Title","service2Desc","service3Title","service3Desc","service4Title","service4Desc","service5Title","service5Desc","service6Title","service6Desc","servicesData","_ref","onLogin","credentials","setCredentials","useState","username","password","error","setError","handleChange","e","name","value","target","prevState","_jsx","className","children","_jsxs","onSubmit","preventDefault","localStorage","setItem","htmlFor","type","onChange","required","Messages","messages","setMessages","selectedMessage","setSelectedMessage","useEffect","savedMessages","getItem","parsedMessages","JSON","parse","sort","a","b","Date","date","formatDate","dateString","toLocaleDateString","undefined","year","month","day","hour","minute","length","map","message","index","onClick","service","substring","window","confirm","updatedMessages","splice","stringify","handleDeleteMessage","email","phone","company","Admin","isAuthenticated","setIsAuthenticated","services","setServices","editIndex","setEditIndex","formData","setFormData","isAdding","setIsAdding","setMessage","text","activeTab","setActiveTab","savedServices","handleInputChange","showMessage","setTimeout","handleLogout","removeItem","handleAdd","filteredFeatures","filter","feature","trim","updatedService","updatedServices","rows","placeholder","handleFeatureChange","updatedFeatures","cancelEdit","src","alt","idx","handleEdit","handleDelete","AdminLogin"],"sourceRoot":""}