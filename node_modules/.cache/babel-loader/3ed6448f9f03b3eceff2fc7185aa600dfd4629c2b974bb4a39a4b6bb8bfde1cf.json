{"ast":null,"code":"import React,{useState,useEffect}from'react';import'../styles/Messages.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Messages=()=>{const[messages,setMessages]=useState([]);const[selectedMessage,setSelectedMessage]=useState(null);useEffect(()=>{const savedMessages=localStorage.getItem('contactMessages');if(savedMessages){const parsedMessages=JSON.parse(savedMessages);// Sort messages by date, newest first\nparsedMessages.sort((a,b)=>new Date(b.date)-new Date(a.date));setMessages(parsedMessages);}},[]);const handleDeleteMessage=index=>{if(window.confirm('Are you sure you want to delete this message?')){const updatedMessages=[...messages];updatedMessages.splice(index,1);setMessages(updatedMessages);localStorage.setItem('contactMessages',JSON.stringify(updatedMessages));if(selectedMessage===index){setSelectedMessage(null);}}};const formatDate=dateString=>{const options={year:'numeric',month:'short',day:'numeric',hour:'2-digit',minute:'2-digit'};return new Date(dateString).toLocaleDateString(undefined,options);};return/*#__PURE__*/_jsxs(\"div\",{className:\"messages-container\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Contact Messages\"}),messages.length===0?/*#__PURE__*/_jsx(\"div\",{className:\"no-messages\",children:/*#__PURE__*/_jsx(\"p\",{children:\"No messages received yet.\"})}):/*#__PURE__*/_jsxs(\"div\",{className:\"messages-grid\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"messages-list\",children:messages.map((message,index)=>/*#__PURE__*/_jsxs(\"div\",{className:`message-item ${selectedMessage===index?'selected':''}`,onClick:()=>setSelectedMessage(index),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"message-header\",children:[/*#__PURE__*/_jsx(\"h3\",{children:message.name}),/*#__PURE__*/_jsx(\"span\",{className:\"message-date\",children:formatDate(message.date)})]}),/*#__PURE__*/_jsx(\"p\",{className:\"message-subject\",children:message.service}),/*#__PURE__*/_jsxs(\"p\",{className:\"message-preview\",children:[message.message.substring(0,60),\"...\"]})]},index))}),/*#__PURE__*/_jsx(\"div\",{className:\"message-details\",children:selectedMessage!==null?/*#__PURE__*/_jsxs(\"div\",{className:\"message-content\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"message-actions\",children:/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-delete\",onClick:()=>handleDeleteMessage(selectedMessage),children:\"Delete\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"message-info\",children:[/*#__PURE__*/_jsxs(\"h3\",{children:[\"From: \",messages[selectedMessage].name]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Email:\"}),\" \",messages[selectedMessage].email]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Phone:\"}),\" \",messages[selectedMessage].phone||'Not provided']}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Company:\"}),\" \",messages[selectedMessage].company||'Not provided']}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Service of Interest:\"}),\" \",messages[selectedMessage].service]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Date:\"}),\" \",formatDate(messages[selectedMessage].date)]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"message-body\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Message:\"}),/*#__PURE__*/_jsx(\"p\",{children:messages[selectedMessage].message})]})]}):/*#__PURE__*/_jsx(\"div\",{className:\"select-message\",children:/*#__PURE__*/_jsx(\"p\",{children:\"Select a message to view details\"})})})]})]});};export default Messages;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","Messages","messages","setMessages","selectedMessage","setSelectedMessage","savedMessages","localStorage","getItem","parsedMessages","JSON","parse","sort","a","b","Date","date","handleDeleteMessage","index","window","confirm","updatedMessages","splice","setItem","stringify","formatDate","dateString","options","year","month","day","hour","minute","toLocaleDateString","undefined","className","children","length","map","message","onClick","name","service","substring","email","phone","company"],"sources":["C:/Users/bagat/Desktop/facility-management/src/admin/Messages.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport '../styles/Messages.css';\r\n\r\nconst Messages = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [selectedMessage, setSelectedMessage] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const savedMessages = localStorage.getItem('contactMessages');\r\n    if (savedMessages) {\r\n      const parsedMessages = JSON.parse(savedMessages);\r\n      // Sort messages by date, newest first\r\n      parsedMessages.sort((a, b) => new Date(b.date) - new Date(a.date));\r\n      setMessages(parsedMessages);\r\n    }\r\n  }, []);\r\n\r\n  const handleDeleteMessage = (index) => {\r\n    if (window.confirm('Are you sure you want to delete this message?')) {\r\n      const updatedMessages = [...messages];\r\n      updatedMessages.splice(index, 1);\r\n      setMessages(updatedMessages);\r\n      localStorage.setItem('contactMessages', JSON.stringify(updatedMessages));\r\n      \r\n      if (selectedMessage === index) {\r\n        setSelectedMessage(null);\r\n      }\r\n    }\r\n  };\r\n\r\n  const formatDate = (dateString) => {\r\n    const options = { \r\n      year: 'numeric', \r\n      month: 'short', \r\n      day: 'numeric',\r\n      hour: '2-digit',\r\n      minute: '2-digit'\r\n    };\r\n    return new Date(dateString).toLocaleDateString(undefined, options);\r\n  };\r\n\r\n  return (\r\n    <div className=\"messages-container\">\r\n      <h2>Contact Messages</h2>\r\n      \r\n      {messages.length === 0 ? (\r\n        <div className=\"no-messages\">\r\n          <p>No messages received yet.</p>\r\n        </div>\r\n      ) : (\r\n        <div className=\"messages-grid\">\r\n          <div className=\"messages-list\">\r\n            {messages.map((message, index) => (\r\n              <div \r\n                key={index} \r\n                className={`message-item ${selectedMessage === index ? 'selected' : ''}`}\r\n                onClick={() => setSelectedMessage(index)}\r\n              >\r\n                <div className=\"message-header\">\r\n                  <h3>{message.name}</h3>\r\n                  <span className=\"message-date\">{formatDate(message.date)}</span>\r\n                </div>\r\n                <p className=\"message-subject\">{message.service}</p>\r\n                <p className=\"message-preview\">{message.message.substring(0, 60)}...</p>\r\n              </div>\r\n            ))}\r\n          </div>\r\n          \r\n          <div className=\"message-details\">\r\n            {selectedMessage !== null ? (\r\n              <div className=\"message-content\">\r\n                <div className=\"message-actions\">\r\n                  <button \r\n                    className=\"btn btn-delete\"\r\n                    onClick={() => handleDeleteMessage(selectedMessage)}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </div>\r\n                \r\n                <div className=\"message-info\">\r\n                  <h3>From: {messages[selectedMessage].name}</h3>\r\n                  <p><strong>Email:</strong> {messages[selectedMessage].email}</p>\r\n                  <p><strong>Phone:</strong> {messages[selectedMessage].phone || 'Not provided'}</p>\r\n                  <p><strong>Company:</strong> {messages[selectedMessage].company || 'Not provided'}</p>\r\n                  <p><strong>Service of Interest:</strong> {messages[selectedMessage].service}</p>\r\n                  <p><strong>Date:</strong> {formatDate(messages[selectedMessage].date)}</p>\r\n                </div>\r\n                \r\n                <div className=\"message-body\">\r\n                  <h4>Message:</h4>\r\n                  <p>{messages[selectedMessage].message}</p>\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <div className=\"select-message\">\r\n                <p>Select a message to view details</p>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Messages; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}